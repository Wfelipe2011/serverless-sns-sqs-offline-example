service: sns-sqs-offline-example

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-southeast-1
  stage: ${env:NODE_ENV, "development"}
  profile: default
  memorySize: 128 # minimum memory size on amazon lambda
  environment:
    SERVICE: ${self:service}
    STAGE: ${self:provider.stage}
    AWS_REGION: ${self:provider.region}

custom:

  serverless-offline: 
    port: 3200

  webpack:
    includeModules: true
    webpackConfig: "webpack.config.js"
    packager: "npm"
    keepOutputDirectory: true
    
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: "2012-11-05"
    endpoint: http://0.0.0.0:9324
    skipCacheInvalidation: false
    
  serverless-offline-sns:
    port: 4002
    debug: false

plugins:
  - serverless-webpack
  - serverless-offline-direct-lambda
  - serverless-offline-sns
  - serverless-offline-sqs
  - serverless-offline

package:
  individually: true
  exclude:
    - elasticMQ

functions:

  actionDispatcher:
    handler: src/actionDispatcher.handler
    description: The start point of sns-sqs-lambda stack
    events: # invoke the flow by API
      - http:
          path: /invoke
          method: post
          cors: true

  lambdaFunction:
    handler: src/messageReceiver.handler
    description: lambda function that subscribe "lambdaFunction" SNS topic
    events:
      - sns: ${self:service}-${self:provider.stage}-sns-lambdaFunction

  